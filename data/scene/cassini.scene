openspace.spice.loadKernel("${SPICE}/naif0011.tls")
openspace.spice.loadKernel("${SPICE}/pck00010.tpc")

-- TextureResolution = "low"
TextureResolution = "med"
-- TextureResolution = "high"

local startTime = "2015 OCT 16 23:05:00.50"

function preInitialization()
    --[[
    The scripts in this function are executed after the scene is loaded but before the
    scene elements have been initialized, thus they should be used to set the time at
    which the scene should start and other settings that might determine initialization
    critical objects.
    ]]--

    -- Load Spice Kernels
    openspace.spice.loadKernel("${OPENSPACE_DATA}/spice/de430_1850-2150.bsp")

    -- Load planetary constants
    openspace.spice.loadKernel("${SPICE}/pck00010.tpc")

    dofile(openspace.absPath('${SCRIPTS}/bind_keys.lua'))
    dofile(openspace.absPath('${SCRIPTS}/bind_keys_cassini.lua'))

    --local startTime = "2019 APR 16 12:03:00.00"

    -- openspace.scriptScheduler.load("${OPENSPACE_DATA}/scene/osirisrex/scheduled_scripts.lua")

    -- Removing the line below will cause all scripts prior to <startTime> to be executed during initialization
    -- openspace.scriptScheduler.skipTo(startTime);

end

function postInitialization()
    --[[
    The scripts in this function are executed after all objects in the scene have been
    created and initialized, but before the first render call. This is the place to set
    graphical settings for the renderables.
    ]]--
    openspace.printInfo("Setting default values")
    openspace.setPropertyValue("Sun.renderable.enabled", false)
    openspace.setPropertyValue("SunMarker.renderable.enabled", false)
    openspace.setPropertyValue("EarthMarker.renderable.enabled", false)
    --openspace.setPropertyValue("Constellation Bounds.renderable.enabled", false)
    openspace.setPropertyValue("PlutoTrail.renderable.enabled", true)
    openspace.setPropertyValue("PlutoTexture.renderable.enabled", false)

    openspace.setPropertyValue("MilkyWay.renderable.transparency", 0.55)
    openspace.setPropertyValue("MilkyWay.renderable.segments", 50)

    -- Activate night textures and water masks
    openspace.setPropertyValue("Earth.RenderableGlobe.WaterMasks", {0, 1});
    openspace.setPropertyValue("Earth.RenderableGlobe.NightTextures", {0, 1});
    openspace.setPropertyValue("Earth.RenderableGlobe.Atmosphere", true);

    openspace.printInfo("Done setting default values")
    openspace.loadMission("${OPENSPACE_DATA}/scene/cassini/cassini.mission")

    openspace.time.setTime(startTime)
    openspace.time.setDeltaTime(0)

    openspace.resetCameraDirection()
end

return {
    ScenePath = ".",
    CommonFolder = "common",
    Camera = {
        Focus = "Saturn",
        Position = {26974590199.661884, 76314608558.908020, -127086452897.101791},
        Rotation = {0.729548, -0.126024, 0.416827, 0.527382},
    },
    Modules = {
        "sun",
        "mercury",
        -- "lodmercury",
        "venus",
        "earth",
        "mars",
        -- "lodearth",
        -- "lodmoon",
        -- "lodmars",
        "jupiter",
        "saturn",
        "uranus",
        "neptune",
        "stars",
        -- "stars-denver",
        "milkyway",
        -- "milkyway-eso",
        --"imageplane",
        --"cassini",
    }
}
